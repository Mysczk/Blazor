@page "/todo"
@inject TaskService TaskService

<PageTitle>Task Board</PageTitle>

<h3>Task Board</h3>

<!-- Kanban board -->
<div class="task-list-container">
    @foreach (var taskList in GetTaskLists())
    {
        <TaskList taskListModel="taskList"
                TaskLists="@GetTaskLists()"
                OnMoveTask="HandleMoveTask"
                OnRenameTaskList="HandleRenameTaskList"
                OnRemoveTaskList="RemoveTaskList" />
    }

    <!-- Přidání nového TaskListu -->
    <div class="kanban-column add-task-list-column">
        @if (showAddTaskListInput)
        {
            <AddTaskListForm OnTaskListAdded="HandleTaskListAdded" ExistingTaskLists="@GetTaskLists()" />
        }
        else
        {
            <Button_2 OnClick="ShowAddTaskListInput" Type="primary">+ Přidat seznam</Button_2>
        }
    </div>
</div>

@code {
    private void HandleTaskListAdded(string newTaskListName)
    {
        TaskService.AddTaskList(newTaskListName);
        showAddTaskListInput = false;
    }

    private List<TaskListModel> GetTaskLists()
    {
        return TaskService.GetTaskLists();
    }

    private void HandleRenameTaskList(TaskListModel updatedTaskList)
    {
        TaskService.UpdateTaskListName(updatedTaskList);
    }

    private bool showAddTaskListInput = false;
    private void ShowAddTaskListInput()
    {
        showAddTaskListInput = true;
    }

    private void HandleMoveTask((TaskModel task, TaskListModel newTaskList) moveTask)
    {
        TaskService.MoveTask(moveTask.task, moveTask.newTaskList);
    }

    private void RemoveTaskList(TaskListModel taskList)
    {
        TaskService.RemoveTaskList(taskList);
    }
}