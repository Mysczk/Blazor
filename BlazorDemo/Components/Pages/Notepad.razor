@page "/notepad"
<PageTitle>Pozn√°mkov√Ω blok</PageTitle>
<h3>Pozn√°mkov√Ω blok</h3>

<div class="mb-3">
    <TextAreaInput @bind-Value="newNoteText" Rows="3" MaxLength="350" Placeholder="Zadejte pozn√°mku..."/>
</div>
    <Button @onclick="AddNote" Color="ButtonColor.Primary" class="mt-2">P≈ôidat</Button>

<div class="mb-3"></div>
<ul class="list-group">
    @foreach (var note in Notes)
    {
        <li class="list-group-item d-flex justify-content-between align-items-center">
            @if (note.IsEditing)
            {
                <TextInput @bind-Value="note.Text" class="form-control me-2" />
                <Button @onclick="() => SaveEdit(note)" Color="ButtonColor.Success" class="me-2">Ulo≈æit</Button>
            }
            else
            {
                <div class="note-text">
                    @note.Text
                </div>
                <div>
                    <Button @onclick="() => EditNote(note)" Color="ButtonColor.Warning" class="me-2">‚úèÔ∏è</Button>
                    <Button @onclick="() => RemoveNote(note)" Color="ButtonColor.Danger">üóëÔ∏è</Button>
                </div>
            }
        </li>
    }
</ul>

<style>
    .note-text {
    max-height: 100px; 
    overflow: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
}
</style>

@code {
    private List<Note> Notes = new();
    private string newNoteText = "";
 
    private void AddNote()
    {
        if (!string.IsNullOrWhiteSpace(newNoteText))
        {
            Notes.Add(new Note { Text = newNoteText });
            newNoteText = "";
        }
    }

    private void RemoveNote(Note note)
    {
        Notes.Remove(note);
    }

    private void EditNote(Note note)
    {
        note.IsEditing = true;
    }

    private void SaveEdit(Note note)
    {
        note.IsEditing = false;
    }

    private class Note
    {
        public string Text { get; set; } = "";
        public bool IsEditing { get; set; } = false;
    }

}
